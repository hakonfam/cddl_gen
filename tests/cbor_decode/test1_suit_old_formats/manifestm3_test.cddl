;
; Copyright (c) 2020 Nordic Semiconductor ASA
;
; SPDX-License-Identifier: Apache-2.0
;

OuterWrapper = {
      authenticationWrapper: AuthenticationWrapper / nil,
  }
  authenticationWrapper = 1


  AuthenticationWrapper = COSE_Sig

  Headers = (
      protected : empty_or_serialized_map,
      unprotected : {
          ? kid: 4 => bstr
      }
  )

  label = int
  values = int

  label_value = label => values

  COSE_Mac0 = [
        Headers,
        payload : bstr / nil,
        tag : bstr,
     ]

  header_map = {
      Generic_Headers,
      * label_value
  }

  COSE_Sig0 = [
        Headers,
        signature : bstr,
     ]
  COSE_Sig = [
        Headers,
        payload : bstr / nil,
        signatures : [+COSE_Sig0],
     ]
  COSE_Signature = int
  COSE_Encrypt = int
  COSE_Encrypt0 = int

  empty_or_serialized_map = (bstr .cbor header_map) / (bstr .size 0)

  Generic_Headers = (
     ? algorithm_identifier: 1 => int / tstr,
     ? criticality: 2 => [+label],
     ? content_type: 3 => tstr / int,
     ? key_identifier: 4 => bstr,
     ? IV: 5 => bstr,
     ? Partial_IV: 6 => bstr,
     ? counter_signature: 7 => COSE_Signature / [+COSE_Signature]
  )
  COSE_Digest = COSE_Mac0
